diff --git a/src/amd/vulkan/radv_device.c b/src/amd/vulkan/radv_device.c
index 10956ded66f..09a530e0e1e 100644
--- a/src/amd/vulkan/radv_device.c
+++ b/src/amd/vulkan/radv_device.c
@@ -1936,10 +1936,10 @@ VkResult radv_CreateDevice(
 
 	device->force_aniso =
 		MIN2(16, radv_get_int_debug_option("RADV_TEX_ANISO", -1));
-	if (device->force_aniso >= 0) {
-		fprintf(stderr, "radv: Forcing anisotropy filter to %ix\n",
-			1 << util_logbase2(device->force_aniso));
-	}
+//	if (device->force_aniso >= 0) {
+//		fprintf(stderr, "radv: Forcing anisotropy filter to %ix\n",
+//			1 << util_logbase2(device->force_aniso));
+//	}
 
 	*pDevice = radv_device_to_handle(device);
 	return VK_SUCCESS;
diff --git a/src/gallium/drivers/r600/r600_pipe_common.c b/src/gallium/drivers/r600/r600_pipe_common.c
index bce45ea0456..2db96a423a0 100644
--- a/src/gallium/drivers/r600/r600_pipe_common.c
+++ b/src/gallium/drivers/r600/r600_pipe_common.c
@@ -1316,11 +1316,12 @@ bool r600_common_screen_init(struct r600_common_screen *rscreen,
 	slab_create_parent(&rscreen->pool_transfers, sizeof(struct r600_transfer), 64);
 
 	rscreen->force_aniso = MIN2(16, debug_get_num_option("R600_TEX_ANISO", -1));
-	if (rscreen->force_aniso >= 0) {
-		printf("radeon: Forcing anisotropy filter to %ix\n",
-		       /* round down to a power of two */
-		       1 << util_logbase2(rscreen->force_aniso));
-	}
+// because shutup..!!
+//  if (rscreen->force_aniso >= 0) {
+//		printf("radeon: Forcing anisotropy filter to %ix\n",
+//		       /* round down to a power of two */
+//		       1 << util_logbase2(rscreen->force_aniso));
+//	}
 
 	(void) mtx_init(&rscreen->aux_context_lock, mtx_plain);
 	(void) mtx_init(&rscreen->gpu_load_mutex, mtx_plain);
diff --git a/src/gallium/drivers/radeonsi/si_pipe.c b/src/gallium/drivers/radeonsi/si_pipe.c
index 4d36fd46a9b..449b8e62508 100644
--- a/src/gallium/drivers/radeonsi/si_pipe.c
+++ b/src/gallium/drivers/radeonsi/si_pipe.c
@@ -954,11 +954,11 @@ struct pipe_screen *radeonsi_screen_create(struct radeon_winsys *ws,
 		sscreen->force_aniso = MIN2(16, debug_get_num_option("AMD_TEX_ANISO", -1));
 	}
 
-	if (sscreen->force_aniso >= 0) {
-		printf("radeonsi: Forcing anisotropy filter to %ix\n",
-		       /* round down to a power of two */
-		       1 << util_logbase2(sscreen->force_aniso));
-	}
+//	if (sscreen->force_aniso >= 0) {
+//		printf("radeonsi: Forcing anisotropy filter to %ix\n",
+//		       /* round down to a power of two */
+//		       1 << util_logbase2(sscreen->force_aniso));
+//	}
 
 	(void) mtx_init(&sscreen->aux_context_lock, mtx_plain);
 	(void) mtx_init(&sscreen->gpu_load_mutex, mtx_plain);
